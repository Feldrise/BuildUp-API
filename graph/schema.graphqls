directive @needAuthentication on FIELD_DEFINITION

scalar Time

###########
## USERS ##
###########

type User {
  id: ID!
  createdAt: Time!
  email: String!
  role: String!
  step: String!
  firstName: String!
  lastName: String!

  builder: Builder
  coach: Coach
}

input NewUser {
  email: String!
  password: String!
  firstName: String!
  lastName: String!

  builder: NewBuilder
  coach: NewCoach
}

input Login {
  email: String!
  password: String!
}

#############
## BUILDER ##
#############

type Builder {
  id: ID!

  candidatingDate: Time!
  situation: String!
  description: String!

  project: Project!

  coach: User
}

input NewBuilder {
  situation: String!
  description: String!

  project: NewProject!
}

###########
## COACH ##
###########

type Coach {
  id: ID!

  candidatingDate: Time!
  situation: String!
  description: String!

  builders: [User!]!
}

input NewCoach {
  situation: String!
  description: String!
}

##############
## PROJECTS ##
##############

type Project {
  id: ID!
  
  # Basic informations
  name: String!
  description: String!
  team: String!

  # Complementary informations
  categorie: String!
  keywords: String!
  launchDate: Time!
  isLucrative: Boolean!
  isOfficialyRegistered: Boolean!
}

input NewProject {
  # Basic informations
  name: String!
  description: String!
  team: String!

  # Complementary informations
  categorie: String!
  keywords: String
  launchDate: Time!
  isLucrative: Boolean!
  isOfficialyRegistered: Boolean!
}

#############
## FILTERS ##
#############

input Filter {
  key: String!
  value: String!
}

type Query {
  # USERS
  users(filters: [Filter!]): [User!]! @needAuthentication
  user(id: ID): User! @needAuthentication
}

type Mutation {
  # USERS
  createUser(input: NewUser!): User!
  login(input: Login!): String!
}
